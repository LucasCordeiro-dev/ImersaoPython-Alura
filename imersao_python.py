# -*- coding: utf-8 -*-
"""Imersao_Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/LucasCordeiro-dev/ImersaoPython-Alura/blob/main/Imersao_Python.ipynb

Aula 2 (importacao) e 3 (criacao de graficos com python) -
"""

import pandas as pd
import plotly.express as px

df_principal = pd.read_excel("PYTHON.xlsx", sheet_name="Principal")
df_principal

df_total_acoes = pd.read_excel("PYTHON.xlsx", sheet_name="Total_de_acoes")
df_total_acoes

df_ticker = pd.read_excel("PYTHON.xlsx", sheet_name="Ticker")
df_ticker

df_chatgpt = pd.read_excel("PYTHON.xlsx", sheet_name="CHATGPT")
df_chatgpt

df_principal = df_principal[['Ativo','Data','Último (R$)','Var. Dia (%)']].copy()
df_principal

df_principal = df_principal.rename(columns={'Último (R$)': 'valor_final','Var. Dia (%)':'var_dia_pct'}).copy()
df_principal

df_principal['Var_pct'] = df_principal['var_Dia_pct'] / 100
df_principal

df_principal['Var_pct'] = df_principal['var_Dia_pct'] / 100
df_principal['valor_inicial'] = df_principal['valor_final'] / (df_principal['Var_pct'] + 1 )
df_principal

df_principal = df_principal.merge(df_total_acoes,left_on='Ativo',right_on='Código', how='left')
df_principal

df_principal = df_principal.drop(columns=['Código'])
df_principal

df_principal['Variacao_rs'] = (df_principal['valor_final'] - df_principal['valor_inicial'])* df_principal['Qtde. Teórica']
df_principal

pd.options.display.float_format = '{:.2f}'.format

df_principal['Qtde. Teórica'] = df_principal['Qtde. Teórica'].astype(int)
df_principal

df_principal = df_principal.rename(columns={'Qtde. Teórica': 'Qtd_teorica'}).copy()
df_principal

df_principal['Resultado'] = df_principal['Variacao_rs'].apply(lambda x: 'Subiu' if x > 0 else ('Desceu' if x < 0 else 'Estável'))
df_principal

df_principal = df_principal.merge(df_ticker,left_on='Ativo',right_on='Ticker', how='left')
df_principal = df_principal.drop(columns=['Ticker'])
df_principal

df_principal = df_principal.merge(df_chatgpt,left_on='Nome',right_on='Nome da empresa', how='left')
df_principal = df_principal.drop(columns=['Nome da empresa'])
df_principal

df_principal['Cat_idade'] = df_principal['Idade (anos)'].apply(lambda x: "Mais de 100 anos" if x > 100 else ("Menos de 50 anos" if x < 50 else "Entre 50 e 100"))
df_principal

# 1. Maior valor
maior = df_principal['Variacao_rs'].max()

# 2. Menor valor
menor = df_principal['Variacao_rs'].min()

# 3. Média
media = df_principal['Variacao_rs'].mean()

# 4. Média de quem subiu
media_subiu = df_principal[df_principal['Resultado'] == 'Subiu']['Variacao_rs'].mean()

# 5. Média de quem desceu
media_desceu = df_principal[df_principal['Resultado'] == 'Desceu']['Variacao_rs'].mean()

# Formate os valores para exibição
maior = f"R$ {maior:,.2f}"
menor = f"R$ {menor:,.2f}"
media = f"R$ {media:,.2f}"
media_subiu = f"R$ {media_subiu:,.2f}"
media_desceu = f"R$ {media_desceu:,.2f}"

# Imprima os resultados
print("Maior:", maior)
print("Menor:", menor)
print("Média:", media)
print("Média de quem subiu:", media_subiu)
print("Média de quem desceu:", media_desceu)

df_princpal_subiu = df_principal[df_principal['Resultado'] == 'Subiu']
df_principal

df_analise_segmento = df_princpal_subiu.groupby('Segmento')['Variacao_rs'].sum().reset_index()
df_analise_segmento

df_analise_saldo = df_principal.groupby('Resultado')['Variacao_rs'].sum().reset_index()
df_analise_saldo

fig = px.bar(df_analise_saldo, x = 'Resultado', y= 'Variacao_rs', text = 'Variacao_rs', title = 'Variacao Reais por resultado')
fig.show()